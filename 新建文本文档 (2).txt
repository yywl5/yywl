class ILLegalYearException extends Exception{
	ILLegalYearException(){
		
	}
	ILLegalYearException(String message){
		super(message);
	}
}

class ILLegalSalaryException extends Exception{
	ILLegalSalaryException(){
		
	}
	ILLegalSalaryException(String message){
		super(message);
	}
}
public class SalaryDemo {

	public static void main(String[] args) {
		double rewarding;
		int year=Integer.parseInt(args[0]);
		int salary=Integer.parseInt(args[1]);
		
		if(year>2020){
			try{
				throw new ILLegalYearException("无效的入职年份!");
			}catch(ILLegalYearException ex){
				System.out.println(ex.getMessage());
			}
		}else{
			if(salary<500){
				try{
					throw new ILLegalSalaryException("无效月工资!");
				}catch(ILLegalSalaryException ex){
					System.out.println(ex.getMessage());
				}
			}
		}
		if(2020-year<1){
			try{
				rewarding=salary;
				System.out.println("奖金为:"+rewarding);
			}catch(ArithmeticException ex){
				System.out.println("算术异常,除数不能3为0");
			}
			
		}else if(2020-year>=1&&2020-year<3){
			try{
				rewarding=salary*1.3;
				System.out.println("奖金为:"+rewarding);
			}catch(ArithmeticException ex){
				System.out.println("算术异常:除数不能为0");
			}
		}else if(2020-year>=3&&2020-year<5){
			try{
				rewarding=salary*1.5;
				System.out.println("奖金为:"+rewarding);
			}catch(ArithmeticException ex){
				System.out.println("算术异常:除数不能为0");
			}
		}else if(2020-year>=5){
			try{
				rewarding=salary*2;
				System.out.println("奖金为:"+rewarding);
			}catch(ArithmeticException ex){
				System.out.println("算术异常:除数不能为0");
			}
		}

	}
}
